# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
BOX_IMAGE = "bento/ubuntu-18.04"
NODE_COUNT = 2

Vagrant.configure("2") do |config|
  #specify password for smb because it is tiring to keep typing it for testing
  config.vm.synced_folder ".", "/vagrant", type: "smb",
    smb_password: "qgAj!L93Ln", smb_username: "vagrantshare",
    mount_options: ["username=vagrantshare","password=qgAj!L93Ln"]
  config.vm.define "master" do |subconfig|
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.network "public_network"
    config.vm.provider "hyperv" do |h|
      h.cpus = 3
      h.memory = 2048
    end
  end
  (1..NODE_COUNT).each do |i|
    config.vm.define "node#{i}"  do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.network "public_network"
    end
  end
  # config.vm.provision "ansible_local" do |ansible|
  #   ansible.playbook = "serverconfig.yml"
  # end
  # config.vm.provision "ansible_local" do |ansible|
  #   ansible.playbook = "kube.yml"
  # end
  # config.vm.provision "ansible_local" do |ansible|
  #   ansible.playbook = "master.yml"
  # end
end








 # config.vm.synced_folder "../data", "/vagrant_data"



  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install software-properties-common
  # SHELL
  #config.vm.provision "ansible_local" do |ansible|
  #  ansible.playbook = "lamp.yml"
  #end
  #  config.vm.provision "ansible_local" do |ansible|
  #  ansible.playbook = "user.yml"
  #end



